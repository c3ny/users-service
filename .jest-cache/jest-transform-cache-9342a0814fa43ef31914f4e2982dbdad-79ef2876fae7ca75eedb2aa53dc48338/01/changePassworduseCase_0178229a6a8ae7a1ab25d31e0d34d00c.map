{"version":3,"sources":["/Users/ysraelmoreno/Documents/codes/fatec/sangue-solidario/users-service/src/application/ports/in/user/changePassword.useCase.ts"],"sourcesContent":["import { User } from '@/application/core/domain/user.entity';\nimport { Result, ResultFactory } from '@/application/types/result.types';\nimport { UseCase } from '@/application/types/useCase.types';\nimport { UserRepositoryPort } from '../../out/users-repository.port';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { USERS_REPOSITORY } from '@/constants';\nimport { ErrorsEnum } from '@/application/core/errors/errors.enum';\n\ntype ChangePasswordUseCaseParams = {\n  id: string;\n  newPassword: string;\n};\n\n@Injectable()\nexport class ChangePasswordUseCase\n  implements UseCase<ChangePasswordUseCaseParams, Promise<Result<User>>>\n{\n  constructor(\n    @Inject(USERS_REPOSITORY)\n    private readonly usersRepository: UserRepositoryPort,\n  ) {}\n\n  async execute(user: ChangePasswordUseCaseParams): Promise<Result<User>> {\n    const updatedUser = await this.usersRepository.updatePassword(\n      user.id,\n      user.newPassword,\n    );\n\n    if (!updatedUser) {\n      return ResultFactory.failure(ErrorsEnum.UserNotFound);\n    }\n\n    return ResultFactory.success(updatedUser);\n  }\n}\n"],"names":["ChangePasswordUseCase","execute","user","updatedUser","usersRepository","updatePassword","id","newPassword","ResultFactory","failure","ErrorsEnum","UserNotFound","success"],"mappings":";;;;+BAcaA;;;eAAAA;;;6BAbyB;qCAEH;wBACA;2BACF;4BACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQpB,IAAA,AAAMA,wBAAN,MAAMA;IAQX,MAAMC,QAAQC,IAAiC,EAAyB;QACtE,MAAMC,cAAc,MAAM,IAAI,CAACC,eAAe,CAACC,cAAc,CAC3DH,KAAKI,EAAE,EACPJ,KAAKK,WAAW;QAGlB,IAAI,CAACJ,aAAa;YAChB,OAAOK,0BAAa,CAACC,OAAO,CAACC,sBAAU,CAACC,YAAY;QACtD;QAEA,OAAOH,0BAAa,CAACI,OAAO,CAACT;IAC/B;IAhBA,YACE,AACiBC,eAAmC,CACpD;;aADiBA,kBAAAA;IAChB;AAcL"}