{"version":3,"sources":["/Users/ysraelmoreno/Documents/codes/fatec/sangue-solidario/users-service/src/adapters/out/mappers/company.mapper.spec.ts"],"sourcesContent":["import { CompanyMapper, CompanyPersistence } from './company.mapper';\nimport { Company } from '../../../application/core/domain/company.entity';\nimport { Companies } from '../domain/company.entity';\nimport { Users } from '../domain/user.entity';\n\ndescribe('CompanyMapper', () => {\n  describe('toDomain', () => {\n    it('should map Companies entity to Company domain object with all properties', () => {\n      const companiesEntity = new Companies();\n      companiesEntity.id = '123e4567-e89b-12d3-a456-426614174000';\n      companiesEntity.cnpj = '12.345.678/0001-90';\n      companiesEntity.institutionName = 'Hospital São Lucas';\n      companiesEntity.cnes = '1234567';\n      companiesEntity.user = {\n        id: '987e6543-e21b-34d5-a678-426614174111',\n      } as Users;\n\n      const domainCompany = CompanyMapper.toDomain(companiesEntity);\n\n      expect(domainCompany).toBeInstanceOf(Object);\n      expect(domainCompany.id).toBe(companiesEntity.id);\n      expect(domainCompany.cnpj).toBe(companiesEntity.cnpj);\n      expect(domainCompany.institutionName).toBe(\n        companiesEntity.institutionName,\n      );\n      expect(domainCompany.cnes).toBe(companiesEntity.cnes);\n      expect(domainCompany.fkUserId).toBe(companiesEntity.user.id);\n    });\n\n    it('should handle different CNPJ formats', () => {\n      const cnpjFormats = [\n        '12.345.678/0001-90',\n        '12345678000190',\n        '98.765.432/0001-11',\n      ];\n\n      cnpjFormats.forEach((cnpj) => {\n        const companiesEntity = new Companies();\n        companiesEntity.id = '123e4567-e89b-12d3-a456-426614174000';\n        companiesEntity.cnpj = cnpj;\n        companiesEntity.institutionName = 'Test Hospital';\n        companiesEntity.cnes = '1234567';\n        companiesEntity.user = {\n          id: '987e6543-e21b-34d5-a678-426614174111',\n        } as Users;\n\n        const domainCompany = CompanyMapper.toDomain(companiesEntity);\n        expect(domainCompany.cnpj).toBe(cnpj);\n      });\n    });\n\n    it('should handle different institution names', () => {\n      const institutionNames = [\n        'Hospital São Lucas',\n        'Clínica Médica Central',\n        'Centro de Hematologia e Hemoterapia',\n        'Fundação Pró-Sangue Hemocentro de São Paulo',\n      ];\n\n      institutionNames.forEach((institutionName) => {\n        const companiesEntity = new Companies();\n        companiesEntity.id = '123e4567-e89b-12d3-a456-426614174000';\n        companiesEntity.cnpj = '12.345.678/0001-90';\n        companiesEntity.institutionName = institutionName;\n        companiesEntity.cnes = '1234567';\n        companiesEntity.user = {\n          id: '987e6543-e21b-34d5-a678-426614174111',\n        } as Users;\n\n        const domainCompany = CompanyMapper.toDomain(companiesEntity);\n        expect(domainCompany.institutionName).toBe(institutionName);\n      });\n    });\n\n    it('should handle different CNES codes', () => {\n      const cnesCodes = ['1234567', '7654321', '0000001', '9999999'];\n\n      cnesCodes.forEach((cnes) => {\n        const companiesEntity = new Companies();\n        companiesEntity.id = '123e4567-e89b-12d3-a456-426614174000';\n        companiesEntity.cnpj = '12.345.678/0001-90';\n        companiesEntity.institutionName = 'Test Hospital';\n        companiesEntity.cnes = cnes;\n        companiesEntity.user = {\n          id: '987e6543-e21b-34d5-a678-426614174111',\n        } as Users;\n\n        const domainCompany = CompanyMapper.toDomain(companiesEntity);\n        expect(domainCompany.cnes).toBe(cnes);\n      });\n    });\n\n    it('should handle user relationship mapping', () => {\n      const userIds = [\n        '123e4567-e89b-12d3-a456-426614174000',\n        '987e6543-e21b-34d5-a678-426614174111',\n        '456f7890-f12c-45e6-b789-426614174222',\n      ];\n\n      userIds.forEach((userId) => {\n        const companiesEntity = new Companies();\n        companiesEntity.id = '123e4567-e89b-12d3-a456-426614174000';\n        companiesEntity.cnpj = '12.345.678/0001-90';\n        companiesEntity.institutionName = 'Test Hospital';\n        companiesEntity.cnes = '1234567';\n        companiesEntity.user = { id: userId } as Users;\n\n        const domainCompany = CompanyMapper.toDomain(companiesEntity);\n        expect(domainCompany.fkUserId).toBe(userId);\n      });\n    });\n  });\n\n  describe('toPersistence', () => {\n    it('should map Company domain object to persistence format with user relation', () => {\n      const domainCompany: Omit<Company, 'id'> = {\n        cnpj: '12.345.678/0001-90',\n        institutionName: 'Hospital São Lucas',\n        cnes: '1234567',\n        fkUserId: '987e6543-e21b-34d5-a678-426614174111',\n      };\n\n      const persistenceCompany = CompanyMapper.toPersistence(domainCompany);\n\n      expect(persistenceCompany.cnpj).toBe(domainCompany.cnpj);\n      expect(persistenceCompany.institutionName).toBe(\n        domainCompany.institutionName,\n      );\n      expect(persistenceCompany.cnes).toBe(domainCompany.cnes);\n      expect(persistenceCompany.user).toEqual({ id: domainCompany.fkUserId });\n      expect(persistenceCompany.user.id).toBe(domainCompany.fkUserId);\n    });\n\n    it('should handle different types of medical institutions', () => {\n      const institutions = [\n        { name: 'Hospital Geral', cnpj: '11.111.111/0001-11', cnes: '1111111' },\n        {\n          name: 'Clínica Especializada',\n          cnpj: '22.222.222/0001-22',\n          cnes: '2222222',\n        },\n        {\n          name: 'Banco de Sangue',\n          cnpj: '33.333.333/0001-33',\n          cnes: '3333333',\n        },\n        {\n          name: 'Centro de Hematologia',\n          cnpj: '44.444.444/0001-44',\n          cnes: '4444444',\n        },\n      ];\n\n      institutions.forEach((institution) => {\n        const domainCompany: Omit<Company, 'id'> = {\n          cnpj: institution.cnpj,\n          institutionName: institution.name,\n          cnes: institution.cnes,\n          fkUserId: '987e6543-e21b-34d5-a678-426614174111',\n        };\n\n        const persistenceCompany = CompanyMapper.toPersistence(domainCompany);\n        expect(persistenceCompany.cnpj).toBe(institution.cnpj);\n        expect(persistenceCompany.institutionName).toBe(institution.name);\n        expect(persistenceCompany.cnes).toBe(institution.cnes);\n      });\n    });\n\n    it('should properly map user foreign key relationship', () => {\n      const userIds = [\n        '123e4567-e89b-12d3-a456-426614174000',\n        '987e6543-e21b-34d5-a678-426614174111',\n        '456f7890-f12c-45e6-b789-426614174222',\n      ];\n\n      userIds.forEach((userId) => {\n        const domainCompany: Omit<Company, 'id'> = {\n          cnpj: '12.345.678/0001-90',\n          institutionName: 'Test Hospital',\n          cnes: '1234567',\n          fkUserId: userId,\n        };\n\n        const persistenceCompany = CompanyMapper.toPersistence(domainCompany);\n        expect(persistenceCompany.user.id).toBe(userId);\n      });\n    });\n\n    it('should handle CNPJ validation scenarios', () => {\n      const cnpjScenarios = [\n        '12.345.678/0001-90', // Standard format\n        '98.765.432/0001-11', // Different numbers\n        '00.000.000/0001-91', // Edge case with zeros\n      ];\n\n      cnpjScenarios.forEach((cnpj) => {\n        const domainCompany: Omit<Company, 'id'> = {\n          cnpj,\n          institutionName: 'Test Hospital',\n          cnes: '1234567',\n          fkUserId: '987e6543-e21b-34d5-a678-426614174111',\n        };\n\n        const persistenceCompany = CompanyMapper.toPersistence(domainCompany);\n        expect(persistenceCompany.cnpj).toBe(cnpj);\n      });\n    });\n  });\n\n  describe('type safety', () => {\n    it('should ensure CompanyPersistence type excludes id and fkUserId', () => {\n      const persistenceData: CompanyPersistence = {\n        cnpj: '12.345.678/0001-90',\n        institutionName: 'Hospital São Lucas',\n        cnes: '1234567',\n        user: { id: '987e6543-e21b-34d5-a678-426614174111' },\n      };\n\n      // This should compile without errors\n      expect(persistenceData.cnpj).toBeDefined();\n      expect(persistenceData.institutionName).toBeDefined();\n      expect(persistenceData.cnes).toBeDefined();\n      expect(persistenceData.user).toBeDefined();\n      expect(persistenceData.user.id).toBeDefined();\n    });\n\n    it('should handle edge cases in mapping', () => {\n      const edgeCaseCompany = new Companies();\n      edgeCaseCompany.id = '123e4567-e89b-12d3-a456-426614174000';\n      edgeCaseCompany.cnpj = '00.000.000/0001-00';\n      edgeCaseCompany.institutionName = 'A';\n      edgeCaseCompany.cnes = '0000000';\n      edgeCaseCompany.user = {\n        id: '000e0000-e00b-00d0-a000-000000000000',\n      } as Users;\n\n      const domainCompany = CompanyMapper.toDomain(edgeCaseCompany);\n      expect(domainCompany.cnpj).toBe('00.000.000/0001-00');\n      expect(domainCompany.institutionName).toBe('A');\n      expect(domainCompany.cnes).toBe('0000000');\n    });\n  });\n\n  describe('bidirectional mapping', () => {\n    it('should maintain data integrity in round-trip mapping', () => {\n      const originalDomain: Company = {\n        id: '123e4567-e89b-12d3-a456-426614174000',\n        cnpj: '12.345.678/0001-90',\n        institutionName: 'Hospital São Lucas',\n        cnes: '1234567',\n        fkUserId: '987e6543-e21b-34d5-a678-426614174111',\n      };\n\n      const persistence = CompanyMapper.toPersistence(originalDomain);\n\n      // Simulate the persistence entity structure\n      const companiesEntity = new Companies();\n      companiesEntity.id = originalDomain.id;\n      companiesEntity.cnpj = persistence.cnpj;\n      companiesEntity.institutionName = persistence.institutionName;\n      companiesEntity.cnes = persistence.cnes;\n      companiesEntity.user = persistence.user as Users;\n\n      const backToDomain = CompanyMapper.toDomain(companiesEntity);\n\n      expect(backToDomain.id).toBe(originalDomain.id);\n      expect(backToDomain.cnpj).toBe(originalDomain.cnpj);\n      expect(backToDomain.institutionName).toBe(originalDomain.institutionName);\n      expect(backToDomain.cnes).toBe(originalDomain.cnes);\n      expect(backToDomain.fkUserId).toBe(originalDomain.fkUserId);\n    });\n  });\n\n  describe('business logic validation', () => {\n    it('should handle hospital companies', () => {\n      const hospitalCompany = new Companies();\n      hospitalCompany.id = '123e4567-e89b-12d3-a456-426614174000';\n      hospitalCompany.cnpj = '12.345.678/0001-90';\n      hospitalCompany.institutionName = 'Hospital das Clínicas';\n      hospitalCompany.cnes = '1234567';\n      hospitalCompany.user = {\n        id: '987e6543-e21b-34d5-a678-426614174111',\n      } as Users;\n\n      const domainCompany = CompanyMapper.toDomain(hospitalCompany);\n      expect(domainCompany.institutionName).toContain('Hospital');\n    });\n\n    it('should handle blood bank companies', () => {\n      const bloodBankCompany = new Companies();\n      bloodBankCompany.id = '123e4567-e89b-12d3-a456-426614174000';\n      bloodBankCompany.cnpj = '98.765.432/0001-11';\n      bloodBankCompany.institutionName = 'Banco de Sangue Central';\n      bloodBankCompany.cnes = '9876543';\n      bloodBankCompany.user = {\n        id: '987e6543-e21b-34d5-a678-426614174111',\n      } as Users;\n\n      const domainCompany = CompanyMapper.toDomain(bloodBankCompany);\n      expect(domainCompany.institutionName).toContain('Banco de Sangue');\n    });\n\n    it('should handle clinic companies', () => {\n      const clinicCompany = new Companies();\n      clinicCompany.id = '123e4567-e89b-12d3-a456-426614174000';\n      clinicCompany.cnpj = '55.666.777/0001-88';\n      clinicCompany.institutionName = 'Clínica Médica Especializada';\n      clinicCompany.cnes = '5566778';\n      clinicCompany.user = {\n        id: '987e6543-e21b-34d5-a678-426614174111',\n      } as Users;\n\n      const domainCompany = CompanyMapper.toDomain(clinicCompany);\n      expect(domainCompany.institutionName).toContain('Clínica');\n    });\n  });\n});\n"],"names":["describe","it","companiesEntity","Companies","id","cnpj","institutionName","cnes","user","domainCompany","CompanyMapper","toDomain","expect","toBeInstanceOf","Object","toBe","fkUserId","cnpjFormats","forEach","institutionNames","cnesCodes","userIds","userId","persistenceCompany","toPersistence","toEqual","institutions","name","institution","cnpjScenarios","persistenceData","toBeDefined","edgeCaseCompany","originalDomain","persistence","backToDomain","hospitalCompany","toContain","bloodBankCompany","clinicCompany"],"mappings":"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"}